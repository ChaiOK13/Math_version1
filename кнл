

PrintYellow("Программа для анализа функции!  y= √(1+2x^2), x<=0");
PrintYellow("                                y=(1+x)/(1+(1+e^x))^(1/3), x>0");

while (true) //услговие
{
    MyProgramm();
}

void MyProgramm() //программа, ввод чисел
{
    PrintGreen("Введите x минимальный: ");

    double xMin = GetDouble();



    PrintGreen("Введите x максимальный: ");

    double xMax = GetDouble();

    PrintGreen("Введите шаг функции");

    double xStep = GetDouble();
    xStep = Math.Round(xStep, 6);



    Myfunction(xMin, xMax, xStep); // когда  у  нас  есть  все данные  дадим их отдельному методу 
}


void Myfunction(double xMin, double xMax, double xStep)
{
    // валидация  входных параметров 
    if (xMin > xMax)
    {
        PrintRed("x минимальная больше чем x максимальная");
        return; // выход из функции  дострочно
    }

    if (xStep == 0)
    {
        PrintRed("Шаг равен нулю");
        return;
    }

    if (xStep < 0)
    {
        PrintRed("Шаг меньше нуля");
        return;
    }

    PrintYellow("_____Ответ____");
    /// переберем функцию 
    for (double i = xMin; i <= xMax; i += xStep)
    {
        double y = GetValueFunction(i);
        PrintYellow($"x={Math.Round(i, 5)}: y={y}"); // Ответ 
    }
    PrintYellow($"Пересечение функции с осью X В точке: {GetValueFunction(0)}");




}

double GetValueFunction(double x)
{
    if (x <= 0) // Если x меньше или равно 0
    {
        return Math.Sqrt(1 + 2 * Math.Pow(x, 2)); // Вычисление для первой функции
    }
    else // Если x больше 0
    {
        
        double expX = Math.Pow(2.7, x);
        double step1 = 1 + expX;
        double step2 = Math.Pow(step1, 1.0 / 3.0);
        double step3 = 1 + step2;
        double step4 = 1 + x;
        double y = (step4) / (step3);
        return y;

    }

}



void PrintGreen(string message)
{
    ConsoleColor color = Console.ForegroundColor; // запомнит текущий цвет
    Console.ForegroundColor = ConsoleColor.Green; // поменяем  на  зеленый цвет
    Console.WriteLine(message);  //  выведем  сообщение 
    Console.ForegroundColor = color; // вернем  базовый цвет
}//назначение цвета

void PrintYellow(string message)
{
    ConsoleColor color = Console.ForegroundColor; // запомнит текущий цвет
    Console.ForegroundColor = ConsoleColor.Yellow; // поменяем  на  зеленый цвет
    Console.WriteLine(message);  //  выведем  сообщение 
    Console.ForegroundColor = color; // вернем  базовый цвет
}//назначение цветак


void PrintRed(string message)
{
    ConsoleColor color = Console.ForegroundColor; // запомнит текущий цвет
    Console.ForegroundColor = ConsoleColor.Red; // поменяем  на  зеленый цвет
    Console.WriteLine(message);  //  выведем  сообщение 
    Console.ForegroundColor = color; // вернем  базовый цвет
}//назначение цвета



double GetDouble()
{
    try //исключения
    {
        string temp = Console.ReadLine();
        return Convert.ToDouble(temp); // преобразует в число
    }
    catch // перехватывает ошибку
    {
        PrintRed("Не верный ввод, введите число");
        return GetDouble();  //возвращает к проверке 
    }
}
